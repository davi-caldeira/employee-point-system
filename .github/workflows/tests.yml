name: Tests

on:
  push:
    branches:
      - master
      - '*.x'
  pull_request:
  schedule:
    - cron: '0 0 * * *'

permissions:
  contents: read

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.41
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: employee_point_system
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=5

    strategy:
      fail-fast: true
      matrix:
        php: [8.4]
    env:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: employee_point_system
      DB_USERNAME: root
      DB_PASSWORD: secret
      MAIL_MAILER: log
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create empty tests/Unit directory (if missing)
        run: mkdir -p tests/Unit

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Copy environment file
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..10}; do
            php -r "mysqli_connect('127.0.0.1', 'root', 'secret', 'employee_point_system') or exit(1);" && exit 0
            echo 'Waiting for MySQL...'
            sleep 5
          done
          exit 1

      - name: Run migrations
        run: php artisan migrate --force

      - name: Execute tests
        run: php artisan test
